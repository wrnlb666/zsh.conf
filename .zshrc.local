# keys
if [[ -r ~/.keyrc ]]; then
    source ~/.keyrc
fi

# starship
if [[ -x $(command -v starship) ]]; then
    if ! [[ -r ~/.config/starship.toml ]]; then
        starship preset tokyo-night -o ~/.config/starship.toml
    fi
    source <(starship init zsh)
fi

# ls
if [[ -x "$(command -v lsd)" ]]; then
    alias ls="lsd"
fi
alias ll="ls -lha"

# lazygit
if [[ -x "$(command -v lazygit)" ]]; then
    alias lg="lazygit"
fi

# python venv
venv() {
    if [[ $# == 0 ]]; then
        local dir=$(pwd)
        while [[ $dir != '/' ]]; do
            for v in "venv" ".venv"; do
                if [[ -d "$dir/$v" && -f "$dir/$v/pyvenv.cfg" ]]; then
                    echo "Entering Virtual Environment '$dir/$v'..."
                    source "$dir/$v/bin/activate"
                    return
                fi
            done
            dir=$(dirname "$dir")
        done
        echo "Creating Virtual Environment './venv'..."
        command python3 -m venv venv
    else
        command python3 -m venv $@
    fi
}

# python pyenv
# if [[ -x "$(command -v pyenv)" ]]; then
#     export PYENV_ROOT="$HOME/.pyenv"
#     source <(pyenv init -)
# fi

# gomi
if [[ -x "$(command -v gomi)" ]]; then
    alias rm="gomi"
fi

# man page
if [[ -x "$(command -v bat)" ]]; then
    export MANPAGER="sh -c 'col -bx | bat -l man -p'"
    export MANROFFOPT="-c"
fi

# fzf
if [[ -r /usr/share/fzf/completion.zsh ]]; then
    source /usr/share/fzf/completion.zsh
fi
if [[ -r /usr/share/fzf/key-bindings.zsh ]]; then
    source /usr/share/fzf/key-bindings.zsh
fi
if [[ -x "$(command -v fzf)" ]]; then
    source <(fzf --zsh)
    if [[ -x "$(command -v tmux)" ]]; then
        alias fzf="fzf --tmux center"
    fi
    if [[ -x "$(command -v fd)" ]]; then
        export FZF_DEFAULT_COMMAND="fd --type f"
    fi
    if [[ -x "$(command -v bat)" ]]; then
        export FZF_DEFAULT_OPTS='--preview "bat --color=always {}"'
    fi
fi

# neovim
if [[ -x "$(command -v nvim)" ]]; then
    export EDITOR=nvim
    alias view="nvim -RM"
fi

# zoxide
if [[ -x "$(command -v zoxide)" ]]; then
    source <(zoxide init zsh --cmd j)
    alias cd="j"
fi

# go
if [[ -x "$(command -v go)" ]]; then
    GOROOT="$(go env GOROOT)"
    GOPATH="$(go env GOPATH)"
    export GOROOT
    export GOPATH
    export PATH=$PATH:$GOROOT/bin
    alias gop="GOPROXY=https://goproxy.cn"
fi

# superfile
spf() {
    os=$(uname -s)
    # Linux
    if [[ "$os" == "Linux" ]]; then
        export SPF_LAST_DIR="${XDG_STATE_HOME:-$HOME/.local/state}/superfile/lastdir"
    fi
    # macOS
    if [[ "$os" == "Darwin" ]]; then
        export SPF_LAST_DIR="$HOME/Library/Application Support/superfile/lastdir"
    fi
    command spf "$@"
    [ ! -f "$SPF_LAST_DIR" ] || {
        . "$SPF_LAST_DIR"
        rm -f -- "$SPF_LAST_DIR" > /dev/null
    }
}

# rust
export PATH=$PATH:~/.cargo/bin

# gdu
if [[ -x "$(command -v gdu-go)" ]]; then
    alias gdu="gdu-go"
fi

# vscode
if [[ ! -x $(command -v code) ]] && flatpak info com.visualstudio.code &> /dev/null; then
    alias code="flatpak run com.visualstudio.code"
fi

# mkj
mkj() {
    local dir="$1"
    mkdir -p "$dir"
    cd "$dir" || exit 1
}

# clear cache
uncache() {
    sudo sh -c "echo 3 > /proc/sys/vm/drop_caches"
}

# zsh vi mode
bindkey -M viins '^?' backward-delete-char
bindkey -M viins 'jj' vi-cmd-mode
bindkey -M viins 'jk' vi-cmd-mode
bindkey -v
